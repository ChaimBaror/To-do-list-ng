{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/compnnts/my-list/my-list.component.ts","webpack:///src/app/compnnts/my-list/my-list.component.html","webpack:///src/app/compnnts/to-do-list/to-do-list.component.ts","webpack:///src/app/compnnts/to-do-list/to-do-list.component.html","webpack:///src/app/service/get-api.service.ts","webpack:///src/app/service/to-do.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","MyLIstComponent","ser","mockapi","mock","isHidden","myList$","getList","getdata","subscribe","ras","console","log","deleteItmes","ToDoListComponent","favorite","addToList","toList","GetApiService","http","get","api","providedIn","ToDoService","list$","itme","cunter","v","push","name","isDone","isEdit","next","asObservable","roomArr","getValue","forEach","item","index","splice","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'DoList';\n}\n","<to-do-list></to-do-list>\n<app-my-list></app-my-list>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\n\nimport { AppComponent } from './app.component';\nimport { ToDoListComponent } from './compnnts/to-do-list/to-do-list.component';\nimport { MyLIstComponent } from './compnnts/my-list/my-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { from } from 'rxjs';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ToDoListComponent,\n    MyLIstComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ToDoService } from 'src/app/service/to-do.service';\nimport { Observable } from 'rxjs';\nimport { GetApiService } from 'src/app/service/get-api.service';\n\n@Component({\n  selector: 'app-my-list',\n  templateUrl: './my-list.component.html',\n  styleUrls: ['./my-list.component.css']\n})\nexport class MyLIstComponent implements OnInit {\n  myList$: Observable<object>\n  mock = [] \n  constructor(private ser: ToDoService ,private mockapi:GetApiService) { }\n\n  isHidden: boolean = true;\n  click() {\n    this.isHidden = !this.isHidden;\n  }\n\n  ngOnInit(): void {\n    this.myList$ = this.ser.getList();\n    this.mockapi.getdata().subscribe(ras =>\n      console.log(ras)\n    )\n      // this.mock.push(ras))\n\n    console.log(\"api is work\", this.mock);\n  }\n  delete(id) {\n    console.log(id);\n\n    this.ser.deleteItmes(id)\n  }\n  edit() { }\n  done() { }\n\n}\n","<p>my-list works!</p>\n\n\n\n<div *ngFor=\"let item of mock\">\n    {{item | json}}\n    <ol class=\"mock api\">\n\n        <li [style.text-decoration]=\"item.isDone ? 'line-through ' : 'none'\" [hidden]=!isHidden>\n            <input type=\"checkbox\" [(ngModel)]=\"item.isDone\">\n            {{item.name}} </li>\n        <br>\n\n        <button (click)=delete(item.id)>delete</button>\n\n        <button (click)=click()>Edit</button>\n        <!-- <input type=\"checkbox\" [(ngModel)]=\"item.isEdit\">  -->\n\n    </ol>\n</div>\n<!-- <input type=\"checkbox|radio\" ng-checked=\"expression\"></input> -->\n<div>\n    <div *ngFor=\"let item of myList$|async;\">\n            <span>id :  {{item.id}} </span>\n        <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n                <div class=\"input-group-text\">\n                    <input type=\"checkbox\" aria-label=\"Checkbox for following text input\" [(ngModel)]=\"item.isDone\">\n                </div>\n\n            </div>\n           \n            <input [style.text-decoration]=\"item.isDone ? 'line-through red' : 'none'\" [hidden]=!isHidden type=\"reset\"\n                class=\"form-control\" aria-label=\"Text input with checkbox\" [ngModel]=item.name>\n\n            <input class=\"form-control\" *ngIf=\"!item.isDone\" type=\"text\" [hidden]=isHidden [(ngModel)]=item.name\n                aria-label=\"Checkbox for following text input\">\n\n        </div>\n        <div class=\"todo\">\n            <button button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=delete(item.id)\n                [disabled]=item.isDone>\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n                    <path fill-rule=\"evenodd\"\n                        d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\n                </svg>\n                Delete\n            </button>\n\n            <button type=\"button\" class=\"btn btn-warning\" (click)=click() [disabled]=item.isDone>\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil-square\" fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\n                    <path fill-rule=\"evenodd\"\n                        d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\n                </svg>\n                Edit\n            </button>\n\n        </div>\n    \n\n    </div>\n    <ul class=\"todo\">\n        <!-- <span> {{item.id}} </span> -->\n        <!-- <span [style.text-decoration]=\"item.isDone ? 'line-through red' : 'none'\" [hidden]=!isHidden> -->\n\n\n        <!-- <input type=\"checkbox\" [(ngModel)]=\"item.isDone\"> -->\n        <!-- {{item.name}}  -->\n        <!-- </span> -->\n\n\n        <!-- <input *ngIf=\"!item.isDone\" type=\"text\" [hidden]=isHidden [(ngModel)]=item.name> -->\n\n\n\n\n        <!-- <span class=\"rowlist\">\n                    \n                                <button button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=delete(item.id) [disabled]=item.isDone>\n                                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\"\n                                        xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path\n                                            d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n                                        <path fill-rule=\"evenodd\"\n                                            d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\n                                    </svg>\n                                    Delete\n                                </button>\n                    \n                                <button type=\"button\" class=\"btn btn-warning\" (click)=click() [disabled]=item.isDone>\n                                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil-square\" fill=\"currentColor\"\n                                        xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path\n                                            d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\n                                        <path fill-rule=\"evenodd\"\n                                            d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\n                                    </svg>\n                                    Edit\n                                </button>\n                    \n                            </span> -->\n\n\n\n    </ul>\n\n\n    <div>\n        <h2>done</h2>\n        <div *ngFor=\"let item of myList$|async;\">\n            <div *ngIf=\"item.isDone\">\n                <ul class=\"done\">\n                    <li> {{item.id}} :\n                        {{item.name}}\n                    </li>\n                    <hr>\n                </ul>\n            </div>\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { ToDoService } from 'src/app/service/to-do.service';\n\n@Component({\n  selector: 'to-do-list',\n  templateUrl: './to-do-list.component.html',\n  styleUrls: ['./to-do-list.component.css']\n})\nexport class ToDoListComponent implements OnInit {\n  favorite: string = \"\"\n  constructor(private ser: ToDoService) { }\n\n  toList() {\n    console.log(this.favorite);\n    if (this.favorite != \"\") {\n      this.ser.addToList(this.favorite)\n      console.log(\"b\", this.favorite);\n      this.favorite = \"\"\n    }\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<p>to-do-list works!</p>\n\n\n\n<div class=\"input-group mb-3\">\n    <input type=\"text\" [(ngModel)]=\"favorite\" class=\"form-control\" placeholder=\"Enter itmes...\"\n        aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\">\n    <div class=\"input-group-append\">\n        <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=toList()>add</button>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n \n\ninterface mockapi {\n  id: any;\n  name: string;\n  isDone: boolean;\n\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetApiService {\n\n    api :'https://5f1454452710570016b37e52.mockapi.io/api/todos'\n   \n    constructor(private http :HttpClient) { }\n\n     getdata(): Observable<mockapi>{\n      console.log(\"api fun is work\");\n        return this.http.get<mockapi>(this.api)\n\n    }\n    \n    \n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface items {\n  id: number;\n  name: string;\n  isDone: boolean;\n  isEdit ?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToDoService {\n\n  list$ = new BehaviorSubject<items[]>(null)\n  itme: items[] = []\n  cunter = 0\n  constructor() { }\n\n  addToList(v) {\n   \n    this.itme.push({ name: v, id: ++this.cunter, isDone: false,isEdit: false })\n    this.list$.next(this.itme)\n  }\n\n  deleteToList() { }\n\n  getList(): Observable<object> {\n    return this.list$.asObservable()\n  }\n\n  deleteItmes(id) {\n    console.log(\"deleteItmes\", id);\n    const roomArr: any[] = this.list$.getValue();\n    roomArr.forEach((item, index) => {\n      if (item.id === id) { roomArr.splice(index, 1); }\n    });\n    this.list$.next(roomArr);\n    console.log(\"deleteItmes\", roomArr);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}