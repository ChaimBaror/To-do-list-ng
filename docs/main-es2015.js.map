{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/compnnts/my-list/my-list.component.ts","./src/app/compnnts/my-list/my-list.component.html","./src/app/compnnts/to-do-list/to-do-list.component.ts","./src/app/compnnts/to-do-list/to-do-list.component.html","./src/app/service/get-api.service.ts","./src/app/service/to-do.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,QAAQ,CAAC;KAClB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;QACzB,yEAA2B;;6FDMd,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACG;AAEG;AACgC;AACR;AACf;;AAiBjD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YALJ;YACP,uEAAa;YACb,0DAAW;YACX,qEAAgB;SACjB;mIAIU,SAAS,mBAZlB,2DAAY;QACZ,2FAAiB;QACjB,mFAAe,aAGf,uEAAa;QACb,0DAAW;QACX,qEAAgB;6FAKP,SAAS;cAdrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,2FAAiB;oBACjB,mFAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,0DAAW;oBACX,qEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICIlD,sEACI;IAAA,uDACA;;IAAA,wEAEI;IAAA,wEACI;IAAA,2EACA;IADuB,8RAAyB;IAAhD,4DACA;IAAA,uDAAc;IAAA,4DAAK;IACvB,gEAEA;IAAA,4EAAgC;IAAxB,yVAAuB;IAAC,iEAAM;IAAA,4DAAS;IAE/C,6EAAwB;IAAhB,gTAAe;IAAC,gEAAI;IAAA,4DAAS;IAGzC,4DAAK;IACT,4DAAM;;;;IAdF,0DACA;IADA,oJACA;IAEQ,0DAAgE;IAAhE,uHAAgE;IAAC,oFAAkB;IAC5D,0DAAyB;IAAzB,mFAAyB;IAChD,0DAAc;IAAd,wFAAc;;;;IAyBd,4EAGJ;IAHmF,+VAAqB;IAApG,4DAGJ;;;;IAHiE,mFAAiB;;;;IAbtF,sEACQ;IAAA,uEAAM;IAAA,uDAAkB;IAAA,4DAAO;IACnC,yEACI;IAAA,yEACI;IAAA,yEACI;IAAA,2EACJ;IAD0E,+RAAyB;IAA/F,4DACJ;IAAA,4DAAM;IAEV,4DAAM;IAEN,uEAGA;IAAA,sHAGJ;IAAA,4DAAM;IACN,yEACI;IAAA,8EAEI;IAF0D,6VAAuB;IAEjF,8DAEI;IAFJ,2EAEI;IAAA,uEAEA;IAAA,uEAEJ;IAAA,4DAAM;IACN,oEACJ;IAAA,4DAAS;IAET,+DACI;IADJ,8EACI;IAD0C,mTAAe;IACzD,8DAEI;IAFJ,2EAEI;IAAA,uEAEA;IAAA,uEAEJ;IAAA,4DAAM;IACN,kEACJ;IAAA,4DAAS;IAEb,4DAAM;IAGV,4DAAM;;;;IA3CQ,0DAAkB;IAAlB,0FAAkB;IAIsD,0DAAyB;IAAzB,mFAAyB;IAKhG,0DAAmE;IAAnE,0HAAmE;IAAC,oFAAkB;IAGjE,0DAAoB;IAApB,iFAAoB;IAM5C,0DAAsB;IAAtB,oFAAsB;IAWoC,0DAAsB;IAAtB,oFAAsB;;;IAgEpF,sEACI;IAAA,yEACI;IAAA,qEAAK;IAAA,uDAEL;IAAA,4DAAK;IACL,gEACJ;IAAA,4DAAK;IACT,4DAAM;;;IALO,0DAEL;IAFK,6GAEL;;;IALZ,sEACI;IAAA,mHACI;IAOR,4DAAM;;;IARG,0DAAmB;IAAnB,iFAAmB;;AD1G7B,MAAM,eAAe;IAG1B,YAAoB,GAAgB,EAAU,OAAqB;QAA/C,QAAG,GAAH,GAAG,CAAa;QAAU,YAAO,GAAP,OAAO,CAAc;QADnE,SAAI,GAAG,EAAE;QAGT,aAAQ,GAAY,IAAI,CAAC;IAF8C,CAAC;IAGxE,KAAK;QACH,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CACrC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CACjB;QACC,uBAAuB;QAEzB,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IACD,MAAM,CAAC,EAAE;QACP,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAEhB,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC;IAC1B,CAAC;IACD,IAAI,KAAK,CAAC;IACV,IAAI,KAAK,CAAC;;8EAzBC,eAAe;+FAAf,eAAe;QCV5B,oEAAG;QAAA,yEAAc;QAAA,4DAAI;QAIrB,4GACI;QAgBJ,sEACI;QAAA,4GACQ;;QA4CR,mEA2CK;QAGL,sEACI;QAAA,qEAAI;QAAA,+DAAI;QAAA,4DAAK;QACb,6GACI;;QASR,4DAAM;QAxGV,4DACI;;QAlBC,0DAAyB;QAAzB,6EAAyB;QAkBrB,0DAAmC;QAAnC,iJAAmC;QA6F/B,0DAAmC;QAAnC,kJAAmC;;6FDzGnC,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAQ3C,MAAM,iBAAiB;IAE5B,YAAoB,GAAgB;QAAhB,QAAG,GAAH,GAAG,CAAa;QADpC,aAAQ,GAAW,EAAE;IACmB,CAAC;IAEzC,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE;YACvB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,CAAC,QAAQ,GAAG,EAAE;SACnB;IACH,CAAC;IACD,QAAQ;IACR,CAAC;;kFAbU,iBAAiB;iGAAjB,iBAAiB;QCR9B,oEAAG;QAAA,4EAAiB;QAAA,4DAAI;QAIxB,yEACI;QAAA,2EAEA;QAFmB,uLAAsB;QAAzC,4DAEA;QAAA,yEACI;QAAA,4EAAwE;QAAjB,yIAAQ,YAAQ;QAAC,8DAAG;QAAA,4DAAS;QACxF,4DAAM;QACV,4DAAM;;QALiB,0DAAsB;QAAtB,iFAAsB;;6FDGhC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAA2C;;;AAcpC,MAAM,aAAa;IAItB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAExC,OAAO;QACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,GAAG,CAAC;IAE3C,CAAC;;0EAVQ,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAA2C;AACQ;;AAY5C,MAAM,WAAW;IAKtB;QAHA,UAAK,GAAG,IAAI,oDAAe,CAAU,IAAI,CAAC;QAC1C,SAAI,GAAY,EAAE;QAClB,WAAM,GAAG,CAAC;IACM,CAAC;IAEjB,SAAS,CAAC,CAAC;QAET,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAC,MAAM,EAAE,KAAK,EAAE,CAAC;QAC3E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IAC5B,CAAC;IAED,YAAY,KAAK,CAAC;IAElB,OAAO;QACL,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;IAClC,CAAC;IAED,WAAW,CAAC,EAAE;QACZ,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;QAC/B,MAAM,OAAO,GAAU,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC7C,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAC9B,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;gBAAE,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAAE;QACnD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;IACtC,CAAC;;sEA3BU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACZD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'DoList';\n}\n","<to-do-list></to-do-list>\n<app-my-list></app-my-list>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\n\nimport { AppComponent } from './app.component';\nimport { ToDoListComponent } from './compnnts/to-do-list/to-do-list.component';\nimport { MyLIstComponent } from './compnnts/my-list/my-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { from } from 'rxjs';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ToDoListComponent,\n    MyLIstComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ToDoService } from 'src/app/service/to-do.service';\nimport { Observable } from 'rxjs';\nimport { GetApiService } from 'src/app/service/get-api.service';\n\n@Component({\n  selector: 'app-my-list',\n  templateUrl: './my-list.component.html',\n  styleUrls: ['./my-list.component.css']\n})\nexport class MyLIstComponent implements OnInit {\n  myList$: Observable<object>\n  mock = [] \n  constructor(private ser: ToDoService ,private mockapi:GetApiService) { }\n\n  isHidden: boolean = true;\n  click() {\n    this.isHidden = !this.isHidden;\n  }\n\n  ngOnInit(): void {\n    this.myList$ = this.ser.getList();\n    this.mockapi.getdata().subscribe(ras =>\n      console.log(ras)\n    )\n      // this.mock.push(ras))\n\n    console.log(\"api is work\", this.mock);\n  }\n  delete(id) {\n    console.log(id);\n\n    this.ser.deleteItmes(id)\n  }\n  edit() { }\n  done() { }\n\n}\n","<p>my-list works!</p>\n\n\n\n<div *ngFor=\"let item of mock\">\n    {{item | json}}\n    <ol class=\"mock api\">\n\n        <li [style.text-decoration]=\"item.isDone ? 'line-through ' : 'none'\" [hidden]=!isHidden>\n            <input type=\"checkbox\" [(ngModel)]=\"item.isDone\">\n            {{item.name}} </li>\n        <br>\n\n        <button (click)=delete(item.id)>delete</button>\n\n        <button (click)=click()>Edit</button>\n        <!-- <input type=\"checkbox\" [(ngModel)]=\"item.isEdit\">  -->\n\n    </ol>\n</div>\n<!-- <input type=\"checkbox|radio\" ng-checked=\"expression\"></input> -->\n<div>\n    <div *ngFor=\"let item of myList$|async;\">\n            <span>id :  {{item.id}} </span>\n        <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n                <div class=\"input-group-text\">\n                    <input type=\"checkbox\" aria-label=\"Checkbox for following text input\" [(ngModel)]=\"item.isDone\">\n                </div>\n\n            </div>\n           \n            <input [style.text-decoration]=\"item.isDone ? 'line-through red' : 'none'\" [hidden]=!isHidden type=\"reset\"\n                class=\"form-control\" aria-label=\"Text input with checkbox\" [ngModel]=item.name>\n\n            <input class=\"form-control\" *ngIf=\"!item.isDone\" type=\"text\" [hidden]=isHidden [(ngModel)]=item.name\n                aria-label=\"Checkbox for following text input\">\n\n        </div>\n        <div class=\"todo\">\n            <button button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=delete(item.id)\n                [disabled]=item.isDone>\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n                    <path fill-rule=\"evenodd\"\n                        d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\n                </svg>\n                Delete\n            </button>\n\n            <button type=\"button\" class=\"btn btn-warning\" (click)=click() [disabled]=item.isDone>\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil-square\" fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\n                    <path fill-rule=\"evenodd\"\n                        d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\n                </svg>\n                Edit\n            </button>\n\n        </div>\n    \n\n    </div>\n    <ul class=\"todo\">\n        <!-- <span> {{item.id}} </span> -->\n        <!-- <span [style.text-decoration]=\"item.isDone ? 'line-through red' : 'none'\" [hidden]=!isHidden> -->\n\n\n        <!-- <input type=\"checkbox\" [(ngModel)]=\"item.isDone\"> -->\n        <!-- {{item.name}}  -->\n        <!-- </span> -->\n\n\n        <!-- <input *ngIf=\"!item.isDone\" type=\"text\" [hidden]=isHidden [(ngModel)]=item.name> -->\n\n\n\n\n        <!-- <span class=\"rowlist\">\n                    \n                                <button button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=delete(item.id) [disabled]=item.isDone>\n                                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\"\n                                        xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path\n                                            d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n                                        <path fill-rule=\"evenodd\"\n                                            d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\n                                    </svg>\n                                    Delete\n                                </button>\n                    \n                                <button type=\"button\" class=\"btn btn-warning\" (click)=click() [disabled]=item.isDone>\n                                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil-square\" fill=\"currentColor\"\n                                        xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path\n                                            d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\n                                        <path fill-rule=\"evenodd\"\n                                            d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\n                                    </svg>\n                                    Edit\n                                </button>\n                    \n                            </span> -->\n\n\n\n    </ul>\n\n\n    <div>\n        <h2>done</h2>\n        <div *ngFor=\"let item of myList$|async;\">\n            <div *ngIf=\"item.isDone\">\n                <ul class=\"done\">\n                    <li> {{item.id}} :\n                        {{item.name}}\n                    </li>\n                    <hr>\n                </ul>\n            </div>\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { ToDoService } from 'src/app/service/to-do.service';\n\n@Component({\n  selector: 'to-do-list',\n  templateUrl: './to-do-list.component.html',\n  styleUrls: ['./to-do-list.component.css']\n})\nexport class ToDoListComponent implements OnInit {\n  favorite: string = \"\"\n  constructor(private ser: ToDoService) { }\n\n  toList() {\n    console.log(this.favorite);\n    if (this.favorite != \"\") {\n      this.ser.addToList(this.favorite)\n      console.log(\"b\", this.favorite);\n      this.favorite = \"\"\n    }\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<p>to-do-list works!</p>\n\n\n\n<div class=\"input-group mb-3\">\n    <input type=\"text\" [(ngModel)]=\"favorite\" class=\"form-control\" placeholder=\"Enter itmes...\"\n        aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\">\n    <div class=\"input-group-append\">\n        <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=toList()>add</button>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n \n\ninterface mockapi {\n  id: any;\n  name: string;\n  isDone: boolean;\n\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetApiService {\n\n    api :'https://5f1454452710570016b37e52.mockapi.io/api/todos'\n   \n    constructor(private http :HttpClient) { }\n\n     getdata(): Observable<mockapi>{\n      console.log(\"api fun is work\");\n        return this.http.get<mockapi>(this.api)\n\n    }\n    \n    \n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface items {\n  id: number;\n  name: string;\n  isDone: boolean;\n  isEdit ?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToDoService {\n\n  list$ = new BehaviorSubject<items[]>(null)\n  itme: items[] = []\n  cunter = 0\n  constructor() { }\n\n  addToList(v) {\n   \n    this.itme.push({ name: v, id: ++this.cunter, isDone: false,isEdit: false })\n    this.list$.next(this.itme)\n  }\n\n  deleteToList() { }\n\n  getList(): Observable<object> {\n    return this.list$.asObservable()\n  }\n\n  deleteItmes(id) {\n    console.log(\"deleteItmes\", id);\n    const roomArr: any[] = this.list$.getValue();\n    roomArr.forEach((item, index) => {\n      if (item.id === id) { roomArr.splice(index, 1); }\n    });\n    this.list$.next(roomArr);\n    console.log(\"deleteItmes\", roomArr);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}